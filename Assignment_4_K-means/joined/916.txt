 Children across England have been back at school for a few weeks now, and with the launch of a revamped computing curriculum, they’ll be learning some new skills: including programming. Pupils as young as five will be learning about algorithms and computational thinking, as well as creating and debugging simple programs of their own, using a variety of tools. It’s a big shakeup for children and teachers alike. The changes have been widely praised within the technology industry, but there are also critics questioning the value of teaching programming to young children, or wondering whether enough teachers have the skills and support that they’ll need to teach computing. The new curriculum sparks debate, it’s fair to say. “We helped write it. It’s our fault!” chuckles Bill Mitchell, who as director of education at BCS, the Chartered Institute of IT, played a key role in the creation process for the new curriculum. BCS worked with the Royal Academy of Engineering to coordinate its development, with campaigning body Next Gen Skills and other organisations also heavily involved in revamping what they saw as an outdated and overly-prescriptive ICT curriculum. Since the new Computing curriculum was announced in 2013, all these bodies have been trying to tackle the new challenge of actually implementing it properly. Mitchell is not playing down the task that’s still facing them. “The huge challenge is to make sure all our teachers are able to be confident and enthusiastic about teaching the subject, which isn’t going to happen by the end of this month,” he says. “There is a huge variation in the kind of computing background that teachers have got: a very tiny handful have a degree in computer science, but for most of the teachers, they are going to be teaching a brand new subject.” He points out that the same is true for the leadership teams within many schools, up to and including head teachers, who are just as unlikely to have a degree in computer science, and are “learning as they go along what a good computing offering looks like”. The new curriculum deliberately leaves some of its details down to individual schools: for example, their choice of materials for teaching computational thinking to younger children, and which languages and software they use for teaching programming. That should make the curriculum more future-proof than if it mandated materials and languages that might be less desirable in five or ten years’ time, but it does put the onus on schools and teachers to make decisions about resources for a subject that they are still new to themselves. “We don’t want teachers just to wait for someone to hand them interesting things to do in the classroom, but to develop themselves. But that’s hard when you haven’t ever taught this subject before, or studied it yourself,” says Mitchell. He praises the work of private companies including BT and Microsoft, with their respective Barefoot Computing and QuickStart Computing schemes to provide materials and training to teachers in partnership with BCS. Mitchell says BCS is also supporting the work of the likes of Code Club, Coder Dojo and Codecademy, while also enlisting technology companies to sponsor a new scholarship program that will fund people with £25k to become computing teachers. However, he’s just as keen to talk about human support networks, including individuals from the technology world going into their local schools to give talks and advice, and teachers swapping their own experiences now the curriculum is in force. “They need face-to-face, peer-to-peer contact with other teachers, to find out what’s working in other schools,” says Mitchell, citing the regional hubs run by BCS’ partner Computing At Schools (CAS) as one attempt to spark this community. “When you meet with other teachers every half-term or month, that kind of long-term, mutually-supportive professional relationship between like-minded teachers is really important,” he says. “This is where you can really take these ideas and make them truly inspirational for kids in the classroom. We want to avoid teachers being spoon-fed things that they don’t take ownership of and develop themselves.” What about parents? BCS commissioned a survey of 1,020 British parents in June, asking them if they were aware of the new computing curriculum’s introduction in September. 60% said they weren’t – a figure that’s since been backed up by similar percentages in surveys by O2 and Ocado Technology. Is this a big problem, really? If schools and teachers have spent recent months getting to grips with the changes themselves, it would not be surprising if they had waited until the new term got underway before communicating those changes to parents. Awareness will hopefully be much higher now, although if it isn’t there’s a problem. “It’s very important that parents do know it’s happening, and I personally think it’s going to be tremendously positive for their children’s education,” says Mitchell. He’s recommending that parents read BCS’ PDF guides to the new primary and secondary computing curriculum, which were written for teachers, but which he hopes will “demystify” the changes, as well as the computing jargon that goes with them. Talk of the new curriculum being “tremendously positive” leads on to the other major criticism of the changes: whether teaching programming to younger children is a waste of time – or at least, an effective use of time and resources for schools. One argument here is that making programming fun and accessible for five year-olds gives a false impression of the discipline’s requirements when they get older. Another related criticism is that since only a small minority of pupils will become professional programmers, it is pointless making every child learn. The most common defence against both accusations is that programming at an early age is more like learning a musical instrument or foreign language: something that can benefit all children beyond the specific skill being taught, rather than a drive to train up more professional musicians or translators. “At primary level, if you teach computing and do it right, you can help children develop their skills in literacy and numeracy,” says Mitchell, who suggests children using the Scratch programming language as part of creative writing, and practising sentence structure while learning about algorithms, as two examples. “To me, the basic idea of computing is you have to get a computer to solve a problem: you have to come up with an algorithm, a set of instructions. If you can do that, it’s a hugely valuable skill whenever you’re working as a team for any kind of project,” he says. “Also, think about other subjects. When you learn physics, you think about physics. But when you learn computing, you’re thinking about thinking. About how thinking works. You have to try to imagine how this computer is going to do something for you. There are lots of transferable skills.” He continues: “At school, when you learn physics, you’re thinking about physics – and that can be wonderful. But when you learn computing, you are thinking about thinking, and about how thinking works. You’re having to try to imagine how this computer is going to do something for you.” For these reasons, Mitchell thinks that it’s “almost irrelevant” what software and technology teachers use in the classroom for the new curriculum: reflecting the belief that the best teaching won’t necessarily happen in the schools with the most devices or most expensive software. “What matters is are they better at inventing new algorithms, understanding how to break a problem down, and how to abstract away all the details they don’t care about?” says Mitchell. He cites New Zealand professor Tim Bell’s Computer Science Unplugged project, which teaches computing concepts using (in its website’s words) “cards, string, crayons and lots of running around” as an inspirational example. “You can learn really important things about computing without going near a computer. The transferable skills are mostly about those things. And this is transformative: it could have a massive impact on society in general,” says Mitchell. “When generation after generation of children have these computational thinking skills, it will change how they view the world around them, and what they can do to change that world so it works for them.” • Coding at school: a parent’s guide to the new curriculum This article was amended on 22 September with a correction: the new computing curriculum is for English schools, not UK-wide. 